version: 0.2

phases:
  install:
    commands:
      - n 20.10.0
      - npm install -g pnpm
      - pnpm install
  pre_build:
    commands:
      - export TURBO_API=$TURBO_API
      - export TURBO_TEAM=$TURBO_TEAM
      - export TURBO_TOKEN=$TURBO_TOKEN
      - mkdir -p .turbo
      - |
        echo "{
          \"apiurl\": \"$TURBO_API\",
          \"teamslug\": \"$TURBO_TEAM\",
          \"token\": \"$TURBO_TOKEN\"
        }" > .turbo/config.json
      - cat .turbo/config.json
  build:
    commands:
      - set -e 
      - echo "Running turborepo build..."
      - |
        BUILD_LOG=$(pnpm build 2>&1) || { echo 'Build failed!'; exit 1; }
        echo "Build log: $BUILD_LOG"
        MISS_DIRS=$(echo "$BUILD_LOG" | grep -a "cache miss" | awk -F':' '{print $1}' | uniq)
        echo "Cache missed directories: $MISS_DIRS"
  post_build:
    commands:
      # - |
      #   for dir in $MISS_DIRS; do
      #     case "$dir" in
      #       "shell")
      #         echo "Syncing _shell app to S3"
      #         aws s3 sync ./apps/_shell/dist/ s3://mfa-template-s3
      #         aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/"
      #         ;;
      #       "health")
      #         echo "Syncing health app to S3"
      #         aws s3 sync ./apps/health/dist/ s3://mfa-template-s3/health --exclude "index.html"
      #         aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/health/assets/remoteEntry.js"
      #         ;;
      #       "insurance")
      #         echo "Syncing insurance app to S3"
      #         aws s3 sync ./apps/insurance/dist/ s3://mfa-template-s3/insurance --exclude "index.html"
      #         aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/insurance/assets/remoteEntry.js"
      #         ;;
      #       "mydata")
      #         echo "Syncing mydata app to S3"
      #         aws s3 sync ./apps/mydata/dist/ s3://mfa-template-s3/mydata --exclude "index.html"
      #         aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/mydata/assets/remoteEntry.js"
      #         ;;
      #       *)
      #         echo "Unknown directory: $dir"
      #         ;;
      #     esac
      #   done
      - |
        echo "Running deploy script..."
        chmod +x ./deploy.sh
        ./deploy.sh
        echo "Deployment complete!"
artifacts:
  files:
    - "apps/*/dist/**/*"
  base-directory: ./
cache:
  paths:
    - '.pnpm-store/**/*'
    - '.turbo/**/*'
